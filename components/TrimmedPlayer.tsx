// components/TrimmedPlayer.tsx
"use client";

import { useEffect, useRef, useState } from "react";
import { Howl } from "howler";

const AUDIO_SRC = "/audio/song.mp3"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô URL ‡∏à‡∏£‡∏¥‡∏á

export default function TrimmedPlayer() {
  const soundRef = useRef<Howl | null>(null);
  const [startTime, setStartTime] = useState(30); // ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  const [duration, setDuration] = useState(15); // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πà‡∏ô
  const [songDuration, setSongDuration] = useState(0);
  

  const playTrimmed = () => {
    if (soundRef.current) {
      soundRef.current.unload();
    }

    const sound = new Howl({
      src: [AUDIO_SRC],
      html5: true,
      onload: () => {
        const durationFromAudio = sound.duration(); // <<== ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á
    setSongDuration(durationFromAudio); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏™‡πà state
    sound.seek(startTime);
    sound.play();
  },
      onplay: () => {
        setTimeout(() => {
          sound.pause(); // ‡∏´‡∏£‡∏∑‡∏≠ .stop()
        }, duration * 1000 * 60 );
      },
    });

    soundRef.current = sound;
  };

  useEffect(() => {
    return () => {
      soundRef.current?.unload(); // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å component
    };
  }, []);

  return (
    <div className="p-4 space-y-4 rounded-xl border w-full max-w-md shadow">
      <h2 className="text-xl text-black font-bold">üéµ ‡∏ï‡∏±‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡πà‡∏≠‡∏ô</h2>

      <div className="space-y-2 text-black">
        <label>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ:</label>
        <input
          type="range"
          min={0}
          max={songDuration - duration} 
          value={startTime}
          onChange={(e) => setStartTime(Number(e.target.value))}
        />
        <div>{startTime}s</div>

        <label>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ):</label>
        <input
          type="range"
          min={1}
          max={30}
          value={duration}
          onChange={(e) => setDuration(Number(e.target.value))}
        />
        <div>{duration}s</div>
      </div>

      <button
        onClick={playTrimmed}
        className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
      >
        ‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      </button>
    </div>
  );
}
